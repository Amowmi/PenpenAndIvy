{"ast":null,"code":"import React from 'react';\nimport GlobalStyle from \"../utils/GlobalStyle\";\nimport SelectMode from \"./Icons/SelectMode\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar PreviewHeader = function PreviewHeader(props) {\n  if (props.PressHandler) {\n    return _jsxs(View, {\n      style: styles.header,\n      children: [_jsx(View, {\n        style: [styles.fullW, GlobalStyle.Primary_Linear_p],\n        children: _jsxs(View, {\n          style: styles.headerPurple,\n          children: [_jsx(Text, {\n            style: styles.textPurple,\n            children: \"Model\"\n          }), _jsx(SelectMode, {\n            PressHandler: props.PressHandler,\n            Mode: props.Mode\n          })]\n        })\n      }), _jsxs(View, {\n        style: styles.headerWhite,\n        children: [_jsx(Text, {\n          style: props.Mode == 'Original' ? styles.textWhiteFocus : styles.textWhite,\n          children: \".\"\n        }), _jsx(Text, {\n          style: props.Mode == 'Home' ? styles.textWhiteFocus : styles.textWhite,\n          children: \".\"\n        }), _jsx(Text, {\n          style: props.Mode == 'Lock' ? styles.textWhiteFocus : styles.textWhite,\n          children: \".\"\n        })]\n      })]\n    });\n  }\n};\nvar styles = StyleSheet.create({\n  header: {\n    width: '100%',\n    height: 121,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  headerPurple: {\n    width: '95%',\n    height: 91,\n    paddingTop: 45,\n    justifyContent: 'flex-end',\n    alignItems: 'center',\n    flexDirection: 'row'\n  },\n  headerWhite: {\n    width: '100%',\n    height: 30,\n    backgroundColor: '#ffffff',\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexDirection: 'row'\n  },\n  textPurple: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: '#ffffff',\n    marginRight: 80\n  },\n  textWhite: {\n    fontSize: 35,\n    fontWeight: 'bold',\n    paddingBottom: 60,\n    margin: 2,\n    color: '#888888'\n  },\n  textWhiteFocus: {\n    fontSize: 35,\n    fontWeight: 'bold',\n    paddingBottom: 60,\n    margin: 2,\n    color: '#8569F6'\n  },\n  fullW: {\n    width: '100%'\n  }\n});\nexport default PreviewHeader;","map":{"version":3,"names":["React","GlobalStyle","SelectMode","StyleSheet","Text","View","jsx","_jsx","jsxs","_jsxs","PreviewHeader","props","PressHandler","style","styles","header","children","fullW","Primary_Linear_p","headerPurple","textPurple","Mode","headerWhite","textWhiteFocus","textWhite","create","width","height","justifyContent","alignItems","paddingTop","flexDirection","backgroundColor","fontSize","fontWeight","color","marginRight","paddingBottom","margin"],"sources":["C:/Users/hands/Desktop/Studies/Sophomore/SS/final_project/PenpenAndIvy/src/components/PreviewHeader.js"],"sourcesContent":["import React from 'react';\r\nimport GlobalStyle from '../utils/GlobalStyle';\r\nimport SelectMode from './Icons/SelectMode';\r\n\r\nimport {\r\n    StyleSheet,\r\n    Text,\r\n    View,\r\n} from 'react-native';\r\n\r\n\r\n\r\nconst PreviewHeader = (props) => {\r\n    if(props.PressHandler){\r\n        return (\r\n\r\n            <View style={styles.header}>\r\n                <View style={[styles.fullW, GlobalStyle.Primary_Linear_p]}>\r\n                    <View style={styles.headerPurple}>\r\n                        <Text style={styles.textPurple}>\r\n                            Model\r\n                        </Text>\r\n                        <SelectMode PressHandler = {props.PressHandler} Mode={props.Mode}/>\r\n\r\n                    </View>\r\n                </View>\r\n                \r\n                <View style={styles.headerWhite}>\r\n                    <Text style={props.Mode=='Original'? styles.textWhiteFocus : styles.textWhite}>\r\n                        .\r\n                    </Text>\r\n                    <Text style={props.Mode=='Home'? styles.textWhiteFocus : styles.textWhite}>\r\n                        .\r\n                    </Text>\r\n                    <Text style={props.Mode=='Lock'? styles.textWhiteFocus : styles.textWhite}>\r\n                        .\r\n                    </Text>\r\n                </View>\r\n            </View>\r\n        \r\n            \r\n    )\r\n    }\r\n\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    header: {\r\n        width:'100%',\r\n        height: 121,\r\n        justifyContent: 'center',\r\n        alignItems: 'center'\r\n    },\r\n    headerPurple: {\r\n        width:'95%',\r\n        height: 91,\r\n        paddingTop: 45,\r\n        justifyContent: 'flex-end',\r\n        alignItems: 'center',\r\n        flexDirection: 'row'\r\n    },\r\n    headerWhite: {\r\n        width:'100%',\r\n        height: 30,\r\n        backgroundColor: '#ffffff',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        flexDirection: 'row'\r\n    },\r\n    textPurple:{\r\n        fontSize: 24,\r\n        fontWeight:'bold',\r\n        color:'#ffffff',\r\n        marginRight: 80\r\n    },\r\n    textWhite:{\r\n        fontSize:  35,\r\n        fontWeight:'bold',\r\n        paddingBottom: 60,\r\n        margin: 2,\r\n        color: '#888888'\r\n    },\r\n    textWhiteFocus:{\r\n        fontSize:  35,\r\n        fontWeight:'bold',\r\n        paddingBottom: 60,\r\n        margin: 2,\r\n        color: '#8569F6',\r\n    },\r\n    fullW:{\r\n        width:'100%'\r\n    }\r\n})\r\n\r\nexport default PreviewHeader;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}