{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport { StatusBar } from 'expo-status-bar';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport React, { useState } from 'react';\nimport { PaperProvider } from 'react-native-paper';\nimport GlobalStyle from \"./utils/GlobalStyle\";\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { NavigationContainer, DefaultTheme } from '@react-navigation/native';\nimport PreviewScreen from \"./screens/PreviewScreen\";\nimport Medium_Buttons from \"./components/CustomButton\";\nimport Icon_Button from \"./components/IconButton\";\nimport Edit_Header from \"./components/backButton\";\nimport EditingScreen from \"./screens/EditingScreen\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar isDarkMode = false;\nvar DarkTheme = _objectSpread(_objectSpread({}, DefaultTheme), {}, {\n  colors: _objectSpread(_objectSpread({}, DefaultTheme.colors), {}, {\n    background: 'white',\n    primary: 'blue',\n    text: 'black',\n    card: '#1E1E1E',\n    border: '#1E1E1E',\n    notification: 'yellow',\n    headerTintColor: 'white'\n  })\n});\nvar LightTheme = _objectSpread(_objectSpread({}, DefaultTheme), {}, {\n  colors: _objectSpread(_objectSpread({}, DefaultTheme.colors), {}, {\n    background: 'white',\n    primary: 'blue',\n    text: 'black',\n    card: 'white',\n    border: 'white',\n    notification: 'yellow',\n    headerTintColor: 'white'\n  })\n});\nvar Stack = createStackNavigator();\nfunction App() {\n  onPressHandler_Download = function onPressHandler_Download() {};\n  return _jsx(PaperProvider, {\n    children: _jsx(NavigationContainer, {\n      children: _jsxs(Stack.Navigator, {\n        children: [_jsx(Stack.Screen, {\n          name: \"PreviewScreen\",\n          component: PreviewScreen,\n          options: {\n            headerShown: false\n          }\n        }), _jsx(Stack.Screen, {\n          name: \"EditingScreen\",\n          component: EditingScreen,\n          options: function options(_ref) {\n            var navigation = _ref.navigation;\n            return {\n              title: '...',\n              headerStyle: {\n                height: 70,\n                borderColor: '#fff',\n                paddingRight: 10\n              },\n              headerLeft: function headerLeft() {\n                return _jsx(View, {\n                  style: {\n                    marginRight: -10,\n                    marginLeft: 3\n                  },\n                  children: _jsx(Edit_Header, {\n                    onPress: function onPress() {\n                      return navigation.navigate('PreviewScreen');\n                    }\n                  })\n                });\n              },\n              headerRight: function headerRight() {\n                return _jsx(View, {\n                  style: {\n                    marginRight: 20,\n                    marginLeft: -10\n                  },\n                  children: _jsx(Medium_Buttons, {\n                    onPressFunction: onPressHandler_Download,\n                    labelArray: {\n                      fontSize: 8,\n                      flex: -1,\n                      lineHeight: 22,\n                      marginHorizontal: 0,\n                      paddingVertical: 0,\n                      marginVertical: 0,\n                      paddingHorizontal: 0\n                    },\n                    title: 'Download',\n                    styleArray: {\n                      height: 23,\n                      width: 60\n                    }\n                  })\n                });\n              }\n            };\n          }\n        })]\n      })\n    })\n  });\n}\nvar styles = StyleSheet.create({});\nexport default App;","map":{"version":3,"names":["StatusBar","StyleSheet","Text","View","Image","ScrollView","Button","Modal","TouchableHighlight","Pressable","Alert","React","useState","PaperProvider","GlobalStyle","createStackNavigator","NavigationContainer","DefaultTheme","PreviewScreen","Medium_Buttons","Icon_Button","Edit_Header","EditingScreen","jsx","_jsx","jsxs","_jsxs","isDarkMode","DarkTheme","_objectSpread","colors","background","primary","text","card","border","notification","headerTintColor","LightTheme","Stack","App","onPressHandler_Download","children","Navigator","Screen","name","component","options","headerShown","_ref","navigation","title","headerStyle","height","borderColor","paddingRight","headerLeft","style","marginRight","marginLeft","onPress","navigate","headerRight","onPressFunction","labelArray","fontSize","flex","lineHeight","marginHorizontal","paddingVertical","marginVertical","paddingHorizontal","styleArray","width","styles","create"],"sources":["C:/Users/hands/Desktop/Studies/Sophomore/SS/final_project/PenpenAndIvy/src/App.js"],"sourcesContent":["import { StatusBar } from 'expo-status-bar';\r\nimport { StyleSheet, Text, View, Image, ScrollView, Button, Modal, TouchableHighlight, Pressable, Alert } from 'react-native';\r\nimport React, { useState } from 'react';\r\n\r\nimport { PaperProvider } from 'react-native-paper';\r\nimport GlobalStyle from './utils/GlobalStyle';\r\n\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\nimport { NavigationContainer, DefaultTheme } from '@react-navigation/native';\r\n\r\nimport PreviewScreen from './screens/PreviewScreen';\r\nimport Medium_Buttons from './components/CustomButton';\r\nimport Icon_Button from './components/IconButton';\r\nimport Edit_Header from './components/backButton';\r\nimport EditingScreen from './screens/EditingScreen';\r\n\r\nconst isDarkMode = false;\r\nconst DarkTheme = {\r\n  ...DefaultTheme,\r\n  colors: {\r\n    ...DefaultTheme.colors,\r\n    background: 'white', // 设置背景颜色\r\n    primary: 'blue', // 设置主要颜色\r\n    text: 'black', // 设置文本颜色\r\n    card: '#1E1E1E', // 设置卡片颜色\r\n    border: '#1E1E1E', // 设置边框颜色\r\n    notification: 'yellow', // 设置通知颜色\r\n    headerTintColor: 'white', // 设置标题栏文本颜色\r\n    // 添加其他您想要更改的颜色属性...\r\n  },\r\n};\r\nconst LightTheme = {\r\n  ...DefaultTheme,\r\n  colors: {\r\n    ...DefaultTheme.colors,\r\n    background: 'white', // 设置背景颜色\r\n    primary: 'blue', // 设置主要颜色\r\n    text: 'black', // 设置文本颜色\r\n    card: 'white', // 设置卡片颜色\r\n    border: 'white', // 设置边框颜色\r\n    notification: 'yellow', // 设置通知颜色\r\n    headerTintColor: 'white', // 设置标题栏文本颜色\r\n    // 添加其他您想要更改的颜色属性...\r\n  },\r\n};\r\n\r\nconst Stack = createStackNavigator();\r\n\r\nfunction App() {\r\n  onPressHandler_Download= () =>{\r\n\r\n  }\r\n\r\n  return (\r\n    <PaperProvider>\r\n      <NavigationContainer>\r\n        <Stack.Navigator>\r\n          <Stack.Screen\r\n            name='PreviewScreen'\r\n            component={PreviewScreen}\r\n            options={{headerShown: false}}\r\n          />\r\n\r\n          <Stack.Screen\r\n            name='EditingScreen'\r\n            component={EditingScreen}\r\n            options={({navigation}) => ({ \r\n              title: '...', \r\n              headerStyle: {height: 70, borderColor: '#fff', paddingRight: 10},\r\n              headerLeft: () => (\r\n              <View style={{ marginRight: -10, marginLeft: 3 }}>\r\n                <Edit_Header  onPress={() => \r\n                  navigation.navigate('PreviewScreen')}/* Back Button */  />  \r\n                \r\n              </View>\r\n              ),\r\n              headerRight: () => (\r\n                <View style={{ marginRight: 20, marginLeft: -10 }}>\r\n                  <Medium_Buttons  // Download Button\r\n                  onPressFunction={onPressHandler_Download}\r\n                  labelArray={{fontSize: 8, flex: -1, lineHeight: 22, marginHorizontal: 0, paddingVertical: 0, marginVertical: 0, paddingHorizontal: 0}}\r\n                  title={'Download'}\r\n                  styleArray={{height: 23, width: 60}}\r\n                />\r\n                </View>\r\n                \r\n              )\r\n            })}\r\n            \r\n          />\r\n        </Stack.Navigator>\r\n      </NavigationContainer>\r\n    </PaperProvider>\r\n    \r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n\r\n  \r\n});\r\n\r\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}