{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport * as React from 'react';\nimport { Button } from 'react-native-paper';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport GlobalStyle from \"../utils/GlobalStyle\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar Medium_Buttons = function Medium_Buttons(props) {\n  return _jsx(Button, _objectSpread(_objectSpread({\n    mode: \"contained\",\n    onPress: props.onPressFunction\n  }, GlobalStyle.Primary_Linear_p_button), {}, {\n    style: props.styleArray,\n    labelStyle: props.labelArray,\n    children: props.title\n  }));\n};\nexport default Medium_Buttons;","map":{"version":3,"names":["React","Button","Text","GlobalStyle","jsx","_jsx","Medium_Buttons","props","_objectSpread","mode","onPress","onPressFunction","Primary_Linear_p_button","style","styleArray","labelStyle","labelArray","children","title"],"sources":["C:/Users/hands/Desktop/Studies/Sophomore/SS/final_project/PenpenAndIvy/src/components/CustomButton.js"],"sourcesContent":["import * as React from 'react';\n\nimport { Button } from 'react-native-paper';\nimport {Text } from 'react-native';\nimport GlobalStyle from '../utils/GlobalStyle';\n\nconst Medium_Buttons = (props) => (\n  <Button mode=\"contained\" \n    onPress={props.onPressFunction} \n    {...GlobalStyle.Primary_Linear_p_button}\n    style={props.styleArray} \n    labelStyle={props.labelArray}\n  >\n    {props.title}\n  </Button>\n);\n\nexport default Medium_Buttons;"],"mappings":";;;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAE9B,SAASC,MAAM,QAAQ,oBAAoB;AAAC,OAAAC,IAAA;AAE5C,OAAOC,WAAW;AAA6B,SAAAC,GAAA,IAAAC,IAAA;AAE/C,IAAMC,cAAc,GAAG,SAAjBA,cAAcA,CAAIC,KAAK;EAAA,OAC3BF,IAAA,CAACJ,MAAM,EAAAO,aAAA,CAAAA,aAAA;IAACC,IAAI,EAAC,WAAW;IACtBC,OAAO,EAAEH,KAAK,CAACI;EAAgB,GAC3BR,WAAW,CAACS,uBAAuB;IACvCC,KAAK,EAAEN,KAAK,CAACO,UAAW;IACxBC,UAAU,EAAER,KAAK,CAACS,UAAW;IAAAC,QAAA,EAE5BV,KAAK,CAACW;EAAK,EACN,CAAC;AAAA,CACV;AAED,eAAeZ,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}