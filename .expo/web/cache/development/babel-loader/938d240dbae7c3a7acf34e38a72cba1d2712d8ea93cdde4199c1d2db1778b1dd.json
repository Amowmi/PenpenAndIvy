{"ast":null,"code":"import React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Medium_Buttons from \"../components/CustomButton\";\nimport Icon_Button from \"../components/IconButton\";\nimport GlobalStyle from \"../utils/GlobalStyle\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar isdarkMode = false;\nexport default function EditingScreen() {\n  onPressHandler = function onPressHandler() {};\n  resetHandler = function resetHandler() {\n    Alert.alert('Reset', 'Are you sure you want to reset?', [{\n      text: 'Cancel',\n      style: 'cancel'\n    }, {\n      text: 'Reset',\n      onPress: function onPress() {\n        return console.log('Reset action');\n      }\n    }]);\n  };\n  doneHandler = function doneHandler() {\n    Alert.alert('Done', 'It is saved', [{\n      text: 'OK'\n    }]);\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Image, {\n      style: styles.imageCard,\n      source: require(\"../../assets/img/IvyPen.png\")\n    }), _jsxs(View, {\n      style: styles.toolBar,\n      children: [_jsx(Medium_Buttons, {\n        onPressFunction: resetHandler,\n        labelArray: {\n          fontSize: 8,\n          flex: -1,\n          lineHeight: 22,\n          marginHorizontal: 0,\n          paddingVertical: 0,\n          marginVertical: 0,\n          paddingHorizontal: 0\n        },\n        title: 'RESET',\n        styleArray: {\n          height: 23\n        }\n      }), _jsx(Icon_Button, {\n        onPressFunction: onPressHandler,\n        iconChoice: 'flip-horizontal'\n      }), _jsx(Icon_Button, {\n        onPressFunction: onPressHandler,\n        iconChoice: 'rotate-right'\n      }), _jsx(Icon_Button, {\n        onPressFunction: onPressHandler,\n        iconChoice: 'circle-outline'\n      }), _jsx(Medium_Buttons, {\n        onPressFunction: doneHandler,\n        labelArray: {\n          fontSize: 8,\n          flex: -1,\n          lineHeight: 22,\n          marginHorizontal: 0,\n          paddingVertical: 0,\n          marginVertical: 0,\n          paddingHorizontal: 0\n        },\n        title: 'DONE',\n        styleArray: {\n          height: 23\n        }\n      })]\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: isdarkMode ? '#1d1d1d' : '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexDirection: 'column',\n    gap: 0\n  },\n  imageCard: {\n    width: 320.75,\n    height: 692,\n    resizeMode: 'cover',\n    borderRadius: 30,\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginTop: 5,\n    marginBottom: 10\n  },\n  toolBar: {\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'space-evenly',\n    alignItems: 'center',\n    backgroundColor: '#dcdcdc',\n    width: '100%',\n    height: 30\n  },\n  header: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    marginTop: 10,\n    width: '100%',\n    paddingLeft: 10,\n    paddingRight: 20,\n    paddingTop: 16\n  },\n  icon: {\n    flex: 1,\n    flexDirection: 'col',\n    justifyContent: 'center',\n    alignItems: 'center',\n    margin: 0,\n    padding: 0\n  }\n});","map":{"version":3,"names":["React","StyleSheet","Text","View","Image","Button","Pressable","Alert","Medium_Buttons","Icon_Button","GlobalStyle","jsx","_jsx","jsxs","_jsxs","isdarkMode","EditingScreen","onPressHandler","resetHandler","alert","text","style","onPress","console","log","doneHandler","styles","container","children","imageCard","source","require","toolBar","onPressFunction","labelArray","fontSize","flex","lineHeight","marginHorizontal","paddingVertical","marginVertical","paddingHorizontal","title","styleArray","height","iconChoice","create","backgroundColor","alignItems","justifyContent","flexDirection","gap","width","resizeMode","borderRadius","marginTop","marginBottom","header","paddingLeft","paddingRight","paddingTop","icon","margin","padding"],"sources":["C:/Users/hands/Desktop/Studies/Sophomore/SS/final_project/PenpenAndIvy/src/screens/EditingScreen.js"],"sourcesContent":["import React from 'react';\nimport { StyleSheet, Text, View, Image, Button, Pressable, Alert} from 'react-native';\nimport Medium_Buttons from '../components/CustomButton';\nimport Icon_Button from '../components/IconButton';\nimport GlobalStyle from '../utils/GlobalStyle';\n\nconst isdarkMode = false;\n\nexport default function EditingScreen(){\n  onPressHandler= () =>{\n\n  }\n  resetHandler= () =>{\n    Alert.alert('Reset', 'Are you sure you want to reset?', [\n      { text: 'Cancel', style: 'cancel' },\n      { text: 'Reset', onPress: () => console.log('Reset action') }\n    ]);\n  }\n  doneHandler = () => {\n    Alert.alert('Done', 'It is saved', [{ text: 'OK' }]);\n  };\n  \n    return(\n      <View style={styles.container}>\n            \n            <Image\n              style={styles.imageCard}\n              source={require('../../assets/img/IvyPen.png')}\n            />\n            <View style={styles.toolBar}>\n              <Medium_Buttons \n                onPressFunction={resetHandler}\n                labelArray={{fontSize: 8,  flex: -1, lineHeight: 22, marginHorizontal: 0, paddingVertical: 0, marginVertical: 0, paddingHorizontal: 0}}\n                title={'RESET'}\n                styleArray={{height: 23}}\n              />\n              <Icon_Button\n              onPressFunction={onPressHandler}\n              iconChoice={'flip-horizontal'}\n              />\n              <Icon_Button\n              onPressFunction={onPressHandler}\n              iconChoice={'rotate-right'}\n              />\n              <Icon_Button\n              onPressFunction={onPressHandler}\n              iconChoice={'circle-outline'}\n              />\n              <Medium_Buttons \n              onPressFunction={doneHandler}\n              labelArray={{fontSize: 8,  flex: -1, lineHeight: 22, marginHorizontal: 0, paddingVertical: 0, marginVertical: 0, paddingHorizontal: 0}}\n              title={'DONE'}\n              styleArray={{height: 23}}\n              />\n            </View> \n        </View>\n    )\n  }\n\n  const styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      backgroundColor: isdarkMode ? '#1d1d1d': '#fff',\n      alignItems: 'center',\n      justifyContent: 'center',\n      flexDirection: 'column',\n      gap: 0\n    },\n    imageCard: {\n      width: 320.75,\n      height: 692,\n      resizeMode: 'cover',\n      borderRadius: 30,\n      alignItems: 'center',\n      justifyContent: 'center',\n      marginTop: 5,\n      marginBottom: 10\n    },\n    toolBar:{\n      flex: 1,\n      flexDirection: 'row',\n      justifyContent: 'space-evenly',\n      alignItems: 'center',\n      backgroundColor: '#dcdcdc',\n      width: '100%',\n      height: 30\n    },\n    header:{\n      flex: 1,\n      flexDirection: 'row',\n      alignItems: 'center',\n      justifyContent: 'space-between',\n      marginTop: 10,\n      width: '100%',\n      paddingLeft: 10,\n      paddingRight: 20,\n      paddingTop: 16,\n  \n    },\n    icon:{\n      flex: 1,\n      flexDirection: 'col',\n      justifyContent: 'center',\n      alignItems: 'center',\n      margin: 0,\n      padding: 0\n    }\n  });"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}